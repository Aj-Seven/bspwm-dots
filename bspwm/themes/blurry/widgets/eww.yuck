;; **
;; **   @Aj-Seven (Abdul Jaber)
;; **   https://github.com/Aj-Seven
;; **

;; ** Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defpoll hour :interval "1s" `date +%H`)
(defpoll minute :interval "1m" `date +%M`)
(defpoll fulldate :interval "24h" "date '+%A, %d %B'")

(defvar pfpimage "../assets/me-logo.png")
(defpoll iam :interval "6h" `whoami`)

;; calendar
(defpoll calendar_day :interval "10h" "date '+%d'")
(defpoll calendar_month :interval "10h" "date '+%m'")
(defpoll calendar_year :interval "10h" "date '+%Y'")

(defpoll weathericon :interval "2h" "Weather icon")
(defpoll weathercity :interval "2h" "Weather city")
(defpoll weathertemp :interval "2h" "Weather current_temp")
(defpoll weatherfeel :interval "2h" "Weather feels_like")
(defpoll weatherdesc :interval "2h" "Weather weather_desc")
(defpoll weatherhex :interval "2h" "Weather hex")

(defpoll art		:interval "1s"  "MediaControl coverloc")
(defpoll title		:interval "1s"  "MediaControl title")
(defpoll artist		:interval "1s"  "MediaControl artist")
(defpoll playpause	:interval "1s"  "MediaControl statusicon")

;; ** Widgets ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; User info Widget ;;
(defwidget pfp[] 
  (box :orientation "h" :class "pfpbox" :space-evenly false
    (box :orientation "v" :height 100 :class "profilebox" :hexpand true :space-evenly false
      (box :orientation "h" :class "pfpboxtop" :space-evenly false
          (box :class "pfpface" :halign "start" :hexpand false
			(image :class "pfpimage" :path "${pfpimage}" :image-width 75 :image-height 75))
        
      (box :orientation "v" :class "pfpboxbot" :space-evenly false
          (box :class "welcometxt" :halign "start" :valign "center" "  Welcome ${iam}")
          (box :class "pfpapps" :halign "center" :valign "center" :hexpand true :spacing 20
			   (button :class "launcher-btn"
                       :onclick "OpenApps --browser"
                       :tooltip "Browser"
                       "󰇧")
               (button :class "launcher-btn"
                       :onclick "OpenApps --fetch"
                       :tooltip "System Fetch"
                       "󰚌")
               (button :class "launcher-btn"
                       :onclick "OpenApps --filemanager"
                       :tooltip "File Manager"
                       "󰝰")
               (button :class "launcher-btn"
                       :onclick "OpenApps --terminal"
                       :tooltip "Terminal"
                       "󰆍")
               (button :class "launcher-btn"
                       :onclick "OpenApps --editor"
                       :tooltip "Editor"
                       "󰷈"))
       ))
   ))
)

               
;; Weather widget ;;
(defwidget weather[] 
  (box :orientation "h" :class "weatherfullbox" :space-evenly false
	(box :orientation "v" :height 100 :class "weatherbox" :hexpand true :space-evenly false
      (box :orientation "h" :class "weathertop" :space-evenly false
        (box :class "weatherdesc" :style "color: ${weatherhex};" :halign "start" :hexpand true weatherdesc)
        (box :class "weathertemp" :halign "end" "${weathertemp}°C")
      )
      (box :orientation "h" :class "weatherbot" :space-evenly false
        (box :class "weathercity" :halign "start" :hexpand true  weathercity)
        (box :class "weathercity" :halign "end" "Feels like ${weatherfeel}°C")
      )
    )
      (box :class "weathericon" :style "color: ${weatherhex};" :halign "center" weathericon)
  )
)

;; Music Player Widget ;;
(defwidget musicplayer[] 
  (box :orientation "h" :class "playerfullbox" :space-evenly false
	(box :orientation "v" :height 100 :class "playerbox" :hexpand true :space-evenly false
      (box :orientation "h" :class "playertop" :space-evenly false :spacing 15 
        (box :class "album_art" :style "background-image: url('${art}');")
      (box :class "playerinfo":orientation "v" :halign "center" :hexpand true
		(label :class "song" :limit-width 18 :text title)
		(label :class "artist" :limit-width 18 :text artist)
	  (box :orientation "h" :class "playerbot" :space-evenly false :valign "center" :halign "center" :spacing 30
        (button :class "btn_prev" :onclick "MediaControl --previous" "玲")
		(button :class "btn_play" :onclick "MediaControl --toggle" playpause)
		(button :class "btn_next" :onclick "MediaControl --next" "怜")
	  )
	  )
      )
    )
  )
)

;; System info Widget ;;
(defwidget sysinfo[] 
  (box :orientation "h" :class "sysfullbox" :space-evenly false
	(box :orientation "v" :height 100 :class "sysbox" :hexpand true :space-evenly false
      (box :orientation "v" :class "systop" :space-evenly false :spacing 15
        (box :class "stats" :hexpand "false" :vexpand "false" :space-evenly "false"
		  (label :tooltip "${round(EWW_CPU.avg, 0)}%" :class "stats-icon-cpu" :text "󰍛 CPU")
		  (scale :min 0 :max 101 :active false :value {EWW_CPU.avg} :class "scale-cpu" :width 265)
		)
		(box :class "stats" :hexpand "false" :vexpand "false" :space-evenly "false"
		  (label :tooltip "${round(EWW_RAM.used_mem_perc, 0)}%" :class "stats-icon-ram" :text "󰘚 MEM")
		  (scale :min 0 :max 101 :active false :value {EWW_RAM.used_mem_perc} :class "scale-ram" :width 265)
		)
		(box :class "stats" :hexpand "false" :vexpand "false" :space-evenly "false"
		  (label :tooltip "${round(EWW_DISK["/"].used_perc, 0)}%" :class "stats-icon-fs" :text "󰝰 DISK")
		  (scale :min 0 :max 101 :active false :value {(EWW_DISK["/"].used / EWW_DISK["/"].total) * 100} :class "scale-fs" :width 265)
		)
	  )
    )
  )
)

;; power menu
(defwidget powermenu []
     (box :class "powermenu"
          :orientation "v"
          (lock-power-restart)))

;; menu lock-power-restart
(defwidget lock-power-restart []
     (box :orientation "v"
          :halign "center"
          :valign "center"
          :space-evenly "false"
          :spacing 30
          (box :orientation "v"
               :halign "center"
               :valign "center"
               :space-evenly "false"
               (button :onclick "bspc quit"
                    :class "logout-btn"
                    :tooltip "Logout bspwm"
                    " 󰍃"))
          (box :orientation "v"
               :halign "center"
               :valign "center"
               :space-evenly "false"
               (button :onclick "physlock -d"
                    :class "lock-btn"
                    :tooltip "lock"
                    ""))
          (box :orientation "v"
               :halign "center"
               :valign "center"
               :space-evenly "false"
               (button :onclick "systemctl reboot"
                    :class "restart-btn"
                    :tooltip "restart"
                    ""))
          (box :orientation "v"
               :halign "center"
               :valign "center"
               :space-evenly "false"
               (button :onclick "systemctl poweroff"
                       :class "power-btn"
                       :tooltip "power off"
                       ""))
    )
)

;; Calendar Widgets ;;
(defwidget cal []
        (box :class "cal-box"
                 :orientation "v"
        (box :class "cal-inner-box"
        (calendar :class "cal"
                          :day calendar_day
                          :month calendar_month
                          :year calendar_year))))

;; The Time Widget ;;
(defwidget infotime[]
  (box :halign "center" :class "caltime" :orientation "h" :space-evenly false
      (box :class "caltext" "${hour}")
      (box :class "caltimeboxes" :valign "center" :spacing 5 :space-evenly false :orientation 'v'
        ;(box :class "caltimebox magenta" "󰝤")
        (box :class "caltimebox white" "󰝤")
        (box :class "caltimebox white" "󰝤")
      )
      (box :class "caltext" "${minute}")
  )
)

;; Panel Widget ;;
(defwidget ipanel[]
  (box :orientation "v" :width 360 :space-evenly false :class "calouterbox"
    (infotime)
    (box :class "infodate" "${fulldate}")
    (pfp)
    (sysinfo)
    (weather)
    (musicplayer)
  )
)
  
;; ** Windows ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Dashboard
(defwindow dashboard
    :geometry (geometry :x "-7px" 
					    :y "37px"
					    :anchor "right top")
					    :stacking "fg"
(ipanel))

;; Power Menu ;;
(defwindow powermenu
    :geometry (geometry :x "-37px"
                        :y "37px"
                        :width "37px"
                        :height "25%"
                        :anchor "right top")
(powermenu))

;; Calendar Windows ;;
(defwindow calendar
        :geometry (geometry :x "90px"
                                                :x "-35px"
                                                :y "35px"
                                                :width "270px"
                                                :height "60px"
                                                :anchor "right top")
(cal))
